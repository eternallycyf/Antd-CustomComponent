import { BASE_CONFIG, formatNumber } from '@/components/Charts/ECharts/PieChart/utils';
import { IChartConfig as IChartConfig2 } from '@/components/Charts/ECharts/StackChart/interface';
import { BASE_CONFIG as BASE_CONFIG2 } from '@/components/Charts/ECharts/StackChart/utils';

export const getAssetTrends = (data: any): IChartConfig2[] => {
  return [
    {
      name: '总资产',
      dataKey: 'totalAssets',
      isLegend: true,
      isSeries: true,
      unitSymbol: '万',
      shape: 'rect',
      type: 'bar',
      shapeColor: '#4D7FE3',
      format: (value: number) => formatNumber({ number: 2, isPercent: true }),
      formatColor: (value: number) => BASE_CONFIG.BLACK,
    },
    {
      name: '区间月均资产',
      dataKey: 'monthlyAverageAssetsInterval',
      isLegend: true,
      isSeries: true,
      unitSymbol: '万',
      shape: 'rect',
      type: 'bar',
      shapeColor: '#54CFDA',
      format: (value: number) => formatNumber({ number: 2, isPercent: true }),
      formatColor: (value: number) => BASE_CONFIG.BLACK,
    },
    {
      name: '近一年月均资产',
      dataKey: 'yearlyAverageAssetsInterval',
      isLegend: true,
      isSeries: true,
      unitSymbol: '万',
      shape: 'rect',
      type: 'bar',
      shapeColor: '#BED7F8',
      format: (value: number) => formatNumber({ number: 2, isPercent: true }),
      formatColor: (value: number) => BASE_CONFIG.BLACK,
    },
    {
      name: '总负债',
      dataKey: 'totalLiabilities',
      isLegend: true,
      isSeries: true,
      unitSymbol: '万',
      shape: 'rect',
      type: 'bar',
      shapeColor: '#BED7F8',
      format: (value: number) => formatNumber({ number: 2, isPercent: true }),
      formatColor: (value: number) => BASE_CONFIG.BLACK,
    },
    {
      name: '区间月均总负债',
      dataKey: 'monthlyAverageTotalLiabilitiesInterval',
      isLegend: true,
      isSeries: true,
      unitSymbol: '万',
      shape: 'rect',
      type: 'bar',
      shapeColor: '#BED7F8',
      format: (value: number) => formatNumber({ number: 2, isPercent: true }),
      formatColor: (value: number) => BASE_CONFIG.BLACK,
    },
    {
      name: '近一年月均总负债',
      dataKey: 'yearlyAverageTotalLiabilitiesInterval',
      isLegend: true,
      isSeries: true,
      unitSymbol: '万',
      shape: 'rect',
      type: 'bar',
      shapeColor: '#BED7F8',
      format: (value: number) => formatNumber({ number: 2, isPercent: true }),
      formatColor: (value: number) => BASE_CONFIG.BLACK,
    },
    {
      name: '净资产',
      dataKey: 'netAssets',
      isLegend: true,
      isSeries: true,
      unitSymbol: '万',
      shape: 'rect',
      type: 'bar',
      shapeColor: '#BED7F8',
      format: (value: number) => formatNumber({ number: 2, isPercent: true }),
      formatColor: (value: number) => BASE_CONFIG.BLACK,
    },
    {
      name: '区间月均净资产',
      dataKey: 'monthlyAverageNetAssetsInterval',
      isLegend: true,
      isSeries: true,
      unitSymbol: '万',
      shape: 'rect',
      type: 'bar',
      shapeColor: '#BED7F8',
      format: (value: number) => formatNumber({ number: 2, isPercent: true }),
      formatColor: (value: number) => BASE_CONFIG.BLACK,
    },
    {
      name: '近一年月均净资产',
      dataKey: 'yearlyAverageNetAssetsInterval',
      isLegend: true,
      isSeries: true,
      unitSymbol: '万',
      shape: 'rect',
      type: 'bar',
      shapeColor: '#BED7F8',
      format: (value: number) => formatNumber({ number: 2, isPercent: true }),
      formatColor: (value: number) => BASE_CONFIG.BLACK,
    },
    {
      name: '合计',
      dataKey: 'total',
      isLegend: false,
      isSeries: false,
      unitSymbol: '万',
      shape: false,
      format: (value: number) => formatNumber({ number: 2, isPercent: true }),
      formatColor: (value: number) => BASE_CONFIG.BLACK,
      hasHr: true,
      isBold: true,
    },
    {
      name: 'top',
      dataKey: 'top',
      isTopFlag: true,
      isLegend: false,
      isSeries: true,
      shape: false,
      format: (value: number) => formatNumber({ number: 2, isPercent: true }),
      series: {
        ...BASE_CONFIG2.BAR_SERIES,
        data: data?.map((item: any) => ({ ...item, value: 0 })),
        label: {
          show: true,
          position: 'top',
          color: '#15181E',
          formatter: (config: any) => {
            return config?.data?.total ? config?.data?.total.toLocaleString() : '';
          },
        },
      },
    },
  ];
};
